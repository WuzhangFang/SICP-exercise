;; Exercise 3.2
(define (make-monitored f)
    (let ((count 0))
        (lambda (i)
            (cond ((eq? i 'how-many-calls?) count)
                  ((eq? i 'reset-count)
                    (begin (set! count 0) count))
                  (else (begin (set! count (+ 1 count))
                               (f i)))))))                      
;; test
(define s (make-monitored sqrt))
(s 100)
(s 'how-many-calls?)
(s 100)
(s 'how-many-calls?)
(s 'reset-count)
(s 'how-many-calls?)
